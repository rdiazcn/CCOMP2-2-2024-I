 5.     Modify class Account (Fig. 3.8) to provide a member function called 
        withdraw that withdraws money from an Account. Ensure that the 
        withdrawal amount does not exceed the Account’s balance. If it does, the balance
        should be left unchanged and the member function should display a message indicating 
        "Withdrawal amount exceeded account balance." Modify class member function 
        withdraw.

 6.     Create a class called Invoice that a hardware store might 
        use to represent an invoice for an item sold at the store. An 
        Invoice should include four data members—a part number (type string),
        a part description (type string), a quantity of the item being purchased 
        (type int) and a price per item (type int). Your class should have a 
        constructor that initializes the four data members. Provide a set and a get
        function for each data member. In addition, provide a member function named 
        getInvoiceAmount that calculates the invoice amount (i.e., multiplies the 
        quantity by the price per item), then returns the amount as an int value. 
        If the quantity is not positive, it should be set to 0. If the price per item is not
        positive, it should be set to 0. Write a test program that demonstrates class 
        Invoice’s capabilities

 7.     Create a class called Employee that includes three pieces of 
        information as data members—a firstname (type string), a last 
        name (type string) and a monthly salary (type int). Your class
        should have a constructor that initializes the three data members. 
        Provide a set and a get function for each data member. If the 
        monthly salary is not positive, set it to 0. Write a test program 
        that demonstrates class Employee’s capabilities. Create two 
        Employee objects and display each object’s yearly salary. Then 
        give each Employee a 10 percent raise and display each 
        Employee’s yearly salary again.

 8.     Create a class called Date that includes three pieces of information 
        as data members—a month (type int), a day (type int) and a year (type 
        int). Your class should have a constructor with three parameters that uses the
        parameters to initialize the three data members. For the purpose of this exercise,
        assume that the values provided for the year and day are correct, but ensure that 
        the month value is in the range 1–12; if it isn’t, set the month to 1. Provide a set
        and a get function for each data member. Provide a member function displayDate that 
        displays the month, day and year separated by forward slashes (/). Write a test program that
        demonstrates class Date’s capabilities.